{"version":3,"sources":["components/navigator/Router.js","components/navigator/Navigator.js","components/navigator/Screen.js","components/Title.js","components/TitleContent.js","components/SectionTitle.js","components/navigator/transitions.js","App.js"],"names":["Router","createContext","Navigator","children","homeScreenId","useState","activeScreen","setActiveScreen","screenSize","useWindowDimensions","loadScreens","components","Children","toArray","aux","i","length","screens","setScreens","useEffect","console","log","data","navigate","screenId","a","async","Provider","value","Box","bgColor","w","width","h","height","Screen","initial","animate","exit","id","next","prev","context","useContext","PresenceTransition","visible","onActivated","nativeEvent","x","Center","position","top","left","Title","title","subtitle","textAlign","Heading","color","size","TitleContent","paragraphs","VStack","p","space","fontSize","map","paragraph","key","HStack","Icon","as","Entypo","name","Text","SectionTitle","Dimensions","get","INITIAL","EXIT","ANIMATE","Fade","opacity","transition","useNativeDriver","duration","SlideToRight","translateX","SlideToLeft","SlideToUp","translateY","SlideToDown","RotateClockwise","rotate","rotation","RotateCounterClockwise","Zoom","scale","App","NativeBaseProvider"],"mappings":"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","file":"static/js/app.10bc8b8e.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Router = createContext({});\n\nexport default Router;","import React, { useState, Children, useEffect } from 'react';\nimport { useWindowDimensions } from 'react-native';\nimport { Box } from 'native-base';\nimport Router from './Router';\n\nconst Navigator = ({ children, homeScreenId }) => {\n\n    const [ activeScreen, setActiveScreen ] = useState(homeScreenId);\n    const screenSize = useWindowDimensions();\n    const loadScreens = () => {\n        let components = Children.toArray(children);\n        let aux = [];\n        for(let i = 0; i < components.length; i++){\n            if(i !== activeScreen){\n                aux = [...aux, false];\n            }else{\n                aux = [...aux, true];\n            }\n        }\n        return aux;\n    };\n    const [ screens, setScreens ] = useState(loadScreens());\n    const navigate = async (screenId) => {\n        let aux = screens;\n        aux[activeScreen] = false;\n        aux[screenId] = true;\n        setActiveScreen(screenId);\n        setScreens(aux);\n    };\n    useEffect(() => {\n        setScreens(loadScreens());\n        console.log(\"Navigator Screens:\", screens);\n    }, []);\n    const data = {\n        navigate,\n        screens,\n        activeScreen\n    };\n\n    return (\n        <Router.Provider value={data} >\n            <Box bgColor={\"black\"} w={screenSize.width} h={screenSize.height} >\n                {children}\n            </Box>\n        </Router.Provider>\n    );\n};\n\nexport default Navigator;","import React, { useContext, useEffect, useState } from 'react';\nimport { useWindowDimensions } from 'react-native';\nimport { Center, PresenceTransition } from 'native-base';\nimport Router from './Router';\nimport { TapGestureHandler } from 'react-native-gesture-handler';\n\nconst Screen = ({ children, initial, animate, exit, id, next, prev }) => {\n\n    const context = useContext(Router);\n    const screenSize = useWindowDimensions();\n    //const [ visible, setVisible ] = useState(context.screens[id]);\n\n    useEffect(() => {\n        console.log(\"Screen:\", id, \"Status:\", context.screens[id]);\n    }, []);\n\n    return (\n        <PresenceTransition initial={initial} animate={animate} exit={exit} visible={context.screens[id]} >\n            <TapGestureHandler\n                onActivated={({ nativeEvent }) => {\n                    if (nativeEvent.x > screenSize.width / 2) {\n                        console.log(\"Tap event on screen\", id);\n                        context.navigate(next);\n                    } else {\n                        console.log(\"Tap event on screen\", id);\n                        context.navigate(prev);\n                    }\n                }}\n            >\n                <Center\n                    w={screenSize.width}\n                    h={screenSize.height}\n                    position={\"fixed\"}\n                    top={0}\n                    left={0}\n                >\n                    {children}\n                </Center>\n            </TapGestureHandler>\n        </PresenceTransition>\n    );\n};\n\nexport default Screen;","import React from 'react';\nimport { useWindowDimensions } from 'react-native';\nimport { Center, Heading } from 'native-base';\n\n/* \n    We have three \"events\" or \"states\" for the animated components in general:\n        1 - The \"Creation\" (First render) Referenced by entering prop.\n        2 - The \"Modification\" (Re-render, but still existing) Referenced by layout prop.\n        3 - The \"Destruction\" (Last render, but doesn't exists anymore) Referenced by exiting prop.\n*/\n\nconst Title = ({ title, subtitle }) => {\n\n    if(!title){\n        title = \"Title\"\n    }\n    if(!subtitle){\n        subtitle = \"Subtitle\"\n    }\n\n    const screenSize = useWindowDimensions();\n\n    return (\n        <Center\n            w={screenSize.width}\n            h={screenSize.height}\n            textAlign={\"center\"}\n            bgColor={\"darkBlue.900\"}\n        >\n            <Heading color={\"green.500\"} size={\"4xl\"} >\n                {\"\\u300E\" + title + \"\\u300F\"}\n            </Heading>\n            <Heading color={\"white\"} size={\"xl\"} >\n                {\"\\u300C\" + subtitle + \"\\u300D\"}\n            </Heading>\n        </Center>\n    );\n};\n\nexport default Title;","import React from 'react';\nimport { useWindowDimensions } from 'react-native';\nimport { VStack, HStack, Icon, Text, Heading, Box } from 'native-base';\nimport { Entypo } from '@expo/vector-icons';\n\nconst TitleContent = ({ title, paragraphs }) => {\n\n    const screenSize = useWindowDimensions();\n\n    return (\n        <VStack w={screenSize.width} h={screenSize.height} p={\"5%\"} bgColor={\"darkBlue.900\"} space={5} >\n            <Box>\n                <Heading fontSize={\"6xl\"} color={\"green.500\"} >\n                    {title}\n                </Heading>\n            </Box>\n            {\n                paragraphs.map((paragraph, key) => {\n                    return (\n                        <HStack key={key} space={5} >\n                            <Icon\n                                as={Entypo}\n                                name={\"moon\"}\n                                color={\"yellow.400\"}\n                                size={\"2xl\"}\n                            />\n                            <Text fontSize={\"2xl\"} color={\"white\"} >\n                                {paragraph}\n                            </Text>\n                        </HStack>\n                    );\n                })\n            }\n        </VStack>\n    );\n};\n\nexport default TitleContent;","import React from 'react';\nimport { Center, Heading } from 'native-base';\nimport { useWindowDimensions } from 'react-native';\n\nconst SectionTitle = ({ title }) => {\n\n    const screenSize = useWindowDimensions();\n\n    if(!title){\n        title = \"Title\";\n    }\n\n    return (\n        <Center\n            textAlign={\"center\"}\n            w={screenSize.width}\n            h={screenSize.height}\n            bgColor={\"darkBlue.900\"}\n        >\n            <Heading\n                color={\"green.500\"}\n                size={\"4xl\"}\n            >\n                {\"\\u300E\" + title + \"\\u300F\"}\n            </Heading>\n        </Center>\n    );\n};\n\nexport default SectionTitle;","import { Dimensions } from \"react-native\";\n\nconst screenSize = Dimensions.get(\"window\");\n\nconst INITIAL = {};\nconst EXIT = {};\nconst ANIMATE = {};\n\nINITIAL.Fade = {\n    opacity: 0\n};\nEXIT.Fade = {\n    opacity: 0\n};\nANIMATE.Fade = {\n    opacity: 1,\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\nINITIAL.SlideToRight = {\n    translateX: -screenSize.width\n};\nEXIT.SlideToRight = {\n    translateX: screenSize.width\n};\nANIMATE.SlideToRight = {\n    translateX: 0,\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\nINITIAL.SlideToLeft = {\n    translateX: screenSize.width\n};\nEXIT.SlideToLeft = {\n    translateX: -screenSize.width\n};\nANIMATE.SlideToLeft = {\n    translateX: 0,\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\nINITIAL.SlideToUp = {\n    translateY: -screenSize.height\n};\nEXIT.SlideToUp = {\n    translateY: screenSize.height\n};\nANIMATE.SlideToUp = {\n    translateY: 0,\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\nINITIAL.SlideToDown = {\n    translateY: screenSize.height\n};\nEXIT.SlideToDown = {\n    translateY: -screenSize.height\n};\nANIMATE.SlideToDown = {\n    translateY: 0,\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\nINITIAL.RotateClockwise = {\n    rotate: \"0deg\"\n};\nEXIT.RotateClockwise = {\n    rotate: \"0deg\"\n};\nANIMATE.RotateClockwise = {\n    rotation: \"-360deg\",\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\nINITIAL.RotateCounterClockwise = {\n    rotate: \"0deg\"\n};\nEXIT.RotateCounterClockwise = {\n    rotate: \"0deg\"\n};\nANIMATE.RotateCounterClockwise = {\n    rotation: \"360deg\",\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\nINITIAL.Zoom = {\n    scale: 0\n};\nEXIT.Zoom = {\n    scale: 0\n};\nANIMATE.Zoom = {\n    scale: 1,\n    transition: {\n        useNativeDriver: false,\n        duration: 2000\n    }\n};\n\nexport { INITIAL, EXIT, ANIMATE };","import React from 'react';\nimport { useWindowDimensions } from 'react-native';\nimport { NativeBaseProvider } from 'native-base';\nimport Navigator from './components/navigator/Navigator';\nimport Screen from './components/navigator/Screen';\nimport Title from './components/Title';\nimport TitleContent from './components/TitleContent';\nimport SectionTitle from './components/SectionTitle';\nimport { ANIMATE, EXIT, INITIAL } from './components/navigator/transitions';\n\n// LayoutAnimations are only aviable on mobile!!!\n\nconst App = () => {\n\n  const screenSize = useWindowDimensions();\n\n  return (\n    <NativeBaseProvider>\n      <Navigator homeScreenId={0} >\n        <Screen\n          id={0} prev={0} next={1} initial={INITIAL.Fade} animate={ANIMATE.Fade} exit={EXIT.Fade} >\n          <Title title={\"Creaci\\u00F3n de Videojuegos\"} subtitle={\"ft. Construct 2\"} />\n        </Screen>\n        <Screen\n            id={1} prev={0} next={2} initial={INITIAL.Fade} animate={ANIMATE.Fade} exit={EXIT.Fade} >\n            <SectionTitle title={\"Introducci\\u00F3n\"} />\n          </Screen>\n        <Screen\n          id={2} prev={1} next={3} initial={INITIAL.Fade} animate={ANIMATE.Fade} exit={EXIT.Fade} >\n          <TitleContent\n            title={\"Sobre m\\u00ED:\"}\n            paragraphs={[\n              \"Soy Santiago Wu, conocido en Internet como Jakku Night.\",\n              \"Soy un creador de contenido en Twitch y YouTube.\",\n              \"Me especializo en la creación de videojuegos.\",\n              \"Hago dibujos estilo manga/anime.\",\n              \"Compongo mis propias canciones para mis streams y videos.\",\n              \"Trabajo con programas libres y gratuitos.\",\n              \"Hago todo desde una tablet Android, sin PC o portátil.\"\n            ]}\n          />\n        </Screen>\n        <Screen\n          id={3} prev={2} next={4} initial={INITIAL.SlideToRight} animate={ANIMATE.SlideToRight} exit={EXIT.SlideToRight} >\n          <SectionTitle title={\"Motivaci\\u00F3n\"} />\n        </Screen>\n        <Screen\n          id={4} prev={3} next={5} initial={INITIAL.RotateClockwise} animate={ANIMATE.RotateClockwise} exit={EXIT.RotateClockwise} >\n          <TitleContent\n            title={\"¿Por qu\\u00E9 nos divertimos?\"}\n            paragraphs={[\n              \"¿Qu\\u00E9 es la diversi\\u00F3n?\",\n              \"¿Por qu\\u00E9 los videojuegos son divertidos?\",\n              \"¿Qu\\u00E9 habilidades adquiero en el proceso?\",\n              \"¿Qu\\u00E9 puedo aprender de ello?\",\n              \"¿Puedo vivir de ello?\",\n              \"¿C\\u00F3mo es la industria de los videojuegos?\",\n              \"¿Es DIF\\u00CDCIL?\"\n            ]}\n          />\n        </Screen>\n        <Screen\n          id={5} prev={4} next={6} initial={INITIAL.Zoom} animate={ANIMATE.Zoom} exit={EXIT.Zoom} >\n          <TitleContent\n            title={\"¿Por d\\u00F3nde iniciar?\"}\n            paragraphs={[\n              `Lo mejor es y ser\\u00E1 siempre el cd\\u00F3igo. Todo videojuego, pasa por el c\\u00F3digo sin falta, ya que es lo que mueve el juego y los programas utilizados durante el desarrollo. Por lo general, para no perder tiempo en el proceso y ahorrar gastos innecesarios, las empresas utilizan lo que se llama un \"game engine\" o \"motor de juego\", el cual es un software que realiza ciertas tareas b\\u00E1sicas de los videojuegos por nosotros adem\\u00E1s nos deja implementar nuestras mejoras sobre plantillas de juegos predeterminadas y otras caracter\\u00EDsticas casi sin saber programaci\\u00F3n. El game engine que vamos a utilizar es Construct 2, un game engine usado en juegos de la Web.` \n            ]}\n          />\n        </Screen>\n        <Screen\n          id={6} prev={5} next={6} initial={INITIAL.SlideToUp} animate={ANIMATE.SlideToUp} exit={EXIT.SlideToUp} >\n          <SectionTitle title={\"Gracias por su atenci\\u00F3n\"} />\n        </Screen>\n      </Navigator>\n    </NativeBaseProvider>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}